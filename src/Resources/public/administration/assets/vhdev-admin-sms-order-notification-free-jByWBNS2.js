const o=`{% block vhdev_twilio_validate_button %} <div class="vhdev-twilio-validate-button" style="margin-top: 20px;"> <sw-button variant="primary" :disabled="buttonDisabled" :isLoading="isLoading" @click="validateCredentials"> <sw-icon name="regular-check-circle" v-if="isValidated && !isLoading"></sw-icon> {{ $tc('vhdev-sms.validation.buttonText') }} </sw-button> <p style="margin-top: 10px; font-size: 12px; color: #52667a;"> {{ $tc('vhdev-sms.validation.buttonHelp') }} </p> </div> {% endblock %}`,{Component:c,Mixin:d}=Shopware;c.register("vhdev-twilio-validate-button",{template:o,inject:["systemConfigApiService","loginService"],mixins:[d.getByName("notification")],data(){return{isLoading:!1,isValidated:!1}},computed:{buttonDisabled(){return this.isLoading},salesChannelId(){let e=this.$parent,a=0;for(;e&&a<20;){if(e.currentSalesChannelId&&typeof e.currentSalesChannelId=="string"&&e.currentSalesChannelId!=="null")return e.currentSalesChannelId;if(e.salesChannelId&&typeof e.salesChannelId=="string"&&e.salesChannelId!=="null")return e.salesChannelId;e=e.$parent,a++}return null}},methods:{async validateCredentials(){var e,a;this.isLoading=!0,this.isValidated=!1;try{const n=this.salesChannelId;let i=null;try{const t=JSON.parse(localStorage.getItem("bearerAuth"));t&&t.access&&(i=t.access)}catch{}if(!i){const t=this.loginService.getBearerAuthentication();t&&t.access&&(i=t.access)}const r={"Content-Type":"application/json",Accept:"application/json"};i&&(r.Authorization=`Bearer ${i}`);const l=await fetch("/api/_action/vhdev-sms/validate-twilio",{method:"POST",headers:r,credentials:"include",body:JSON.stringify({salesChannelId:n})});if(!l.ok){const t=await l.json().catch(()=>({}));throw new Error(((a=(e=t.errors)==null?void 0:e[0])==null?void 0:a.detail)||t.message||`HTTP ${l.status}`)}const s=await l.json();if(s.valid){this.isValidated=!0;let t=s.message;s.accountName&&(t+=` (${s.accountName})`),this.createNotificationSuccess({title:this.$tc("vhdev-sms.validation.successTitle"),message:t})}else this.createNotificationError({title:this.$tc("vhdev-sms.validation.errorTitle"),message:s.message||this.$tc("vhdev-sms.validation.errorMessage")})}catch(n){console.error("Twilio validation error:",n),this.createNotificationError({title:this.$tc("vhdev-sms.validation.errorTitle"),message:n.message||this.$tc("vhdev-sms.validation.errorDefault")})}finally{this.isLoading=!1}}}});
//# sourceMappingURL=vhdev-admin-sms-order-notification-free-jByWBNS2.js.map
